MODEL:
  #WEIGHTS: 'models/coco_exp_R18_adam_BN.pth'
  #WEIGHTS: 'exp_results/coco_det/crowd_R18_SGD/model_final.pth'
  META_ARCHITECTURE: "CenterNet"
  BN_TYPE: "BN"
  BACKBONE:
    NAME: "build_resnet"
    DEPTH: 18
    PRETRAIN: True
  PIXEL_MEAN: [0.485, 0.456, 0.406]
  PIXEL_STD: [0.229, 0.224, 0.225]

  CENTERNET:
    DECONV_CHANNEL: [512, 256, 128, 64]
    DECONV_KERNEL: [4, 4, 4]
    NUM_CLASSES: 2
    MODULATE_DEFORM: True
    USE_DEFORM: True
    BIAS_VALUE: -2.19
    DOWN_SCALE: 4
    MIN_OVERLAP: 0.3
    TENSOR_DIM: 128
    LOSS:
      SKIP_LOSS: True
      SKIP_WEIGHT: 1.3
    KD:
      ENABLED: True
      TEACHER_CFG: ["yamls/coco_det/centernet_r_50_C4_0.5x_coco_person.yaml", "yamls/person_face/face_res18.yaml"]
#      TEACHER_CFG: ["yamls/coco_det/centernet_r_50_C4_0.5x_coco_car.yaml",]
      #TEACHER_WEIGTHS: ["models/crowd_human_exp_R50_sgd_BN.pth",]
      #TEACHER_WEIGTHS: ["models/crowd_human_exp_R50_sgd_BN.pth", "models/coco_det_car_R50_SGD_model_final.pth"]
      #TEACHER_WEIGTHS: ["models/coco_det_crowd_R50_SGD.pth", "models/person_face_R50_face_adam.pth"]
      TEACHER_WEIGTHS: ["models/coco_det_crowd_R50_SGD.pth", "exp_results/person_face/R18_face_adam_deform/model_final.pth"]
      #TEACHER_WEIGTHS: ["models/coco_det_car_R50_SGD_model_final.pth"]
      KD_WEIGHT: [1.0, 1.0]
      KD_CLS_WEIGHT: [1000.0, 2000.0]
      KD_WH_WEIGHT: [1.0, 2.0]
      KD_REG_WEIGHT: [0.1, 0.1]
      KD_CLS_INDEX: [1, 2]
      NORM_WH: [True, True]
      KD_WITHOUT_LABEL: True

SOLVER:
  IMS_PER_BATCH: 64
  WARMUP_ITERS: 1
  STEPS: (90, 120)
  MAX_ITER: 140
  BASE_LR: 1.25e-4
  LR_SCHEDULER_NAME: "WarmupCosineAnnealingLR"
  COSINE_DECAY_ITER: 0.6
  OPTIM_NAME: "Adam"
  CLIP_GRADIENTS:
    ENABLED: True
    CLIP_TYPE: "value"
    CLIP_VALUE: 0.5

INPUT:
  FORMAT: 'RGB'
  MIN_SIZE_TEST: 384
  MAX_SIZE_TEST: 640
  MIN_SIZE_TRAIN: (384,)
  MAX_SIZE_TRAIN: 640
  CROP:
    ENABLED: True
    TYPE: "relative_range"
    SIZE: [0.6, 0.6]

TEST:
  EVAL_PERIOD: 3
DATALOADER:
  NUM_WORKERS: 4

DATASETS:
  TRAIN: ("face_train", "crowd_human_train",) # "coco_car_train")
  TEST: ("face_test",)


OUTPUT_DIR: "exp_results/person_face/person_face_multiKD"